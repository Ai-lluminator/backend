services:
  ollama:
    volumes:
      - ./ollama/ollama:/root/.ollama
    container_name: ollama
    pull_policy: always
    tty: true
    restart: unless-stopped
    build:
      dockerfile: ollama/DOCKERFILE
    environment:
      - OLLAMA_KEEP_ALIVE=24h
    networks:
      - ollama-docker
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  aisel-script:
    build:
      dockerfile: ./data-sources/aisel/DOCKERFILE  # Ensure this points to the correct Dockerfile
    container_name: aisel-container
    env_file:
      - .env
    networks:
      - ollama-docker
    restart: unless-stopped

  arxiv-script:
    build:
      dockerfile: ./data-sources/arxiv/DOCKERFILE    # Specify the Dockerfile for app1
    container_name: arxiv-container
    env_file:
      - .env
    networks:
      - ollama-docker
    restart: unless-stopped

  pubmed-script:
    build:
      dockerfile: ./data-sources/pubmed/DOCKERFILE    # Specify the Dockerfile for app1
    container_name: pubmed-container
    env_file:
      - .env
    networks:
      - ollama-docker
    restart: unless-stopped

  db:
    container_name: db_container
    image: ankane/pgvector
    env_file:
      - .env
    volumes:
     - ./database_init/init.sql:/docker-entrypoint-initdb.d/init.sql
     - db_data:/var/lib/postgresql/data
    networks:
      - ollama-docker
    restart: unless-stopped

  bot:
    build:
      context: "."
      dockerfile: telegram/DOCKERFILE
    env_file:
      - .env
    volumes:
      - ./telegram/handlers:/codebase/handlers
    restart: unless-stopped
    networks:
      - ollama-docker

  updater:
    build:
      dockerfile: ./telegram_update/DOCKERFILE    # Specify the Dockerfile for app1
    container_name: update-container
    env_file:
      - .env
    networks:
      - ollama-docker
    restart: unless-stopped

volumes:
  db_data:

networks:
  ollama-docker:
    external: false
